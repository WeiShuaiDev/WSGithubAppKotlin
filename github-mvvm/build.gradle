apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'flavors.gradle'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        applicationId "com.linwei.github_mvvm"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /**添加多 dex分包支持*/
        multiDexEnabled true
    }
    signingConfigs {
        debug {
            keyAlias "${SIGNING_KEYALIAS}"
            keyPassword "${SIGNGING_CERTIFICATEPASSWORD}"
            storeFile file("${SIGNING_CERTIFICATE}")
            storePassword "${SIGNGING_STOREPASSWORD}"
        }
        release {
            keyAlias "${SIGNING_KEYALIAS}"
            keyPassword "${SIGNGING_CERTIFICATEPASSWORD}"
            storeFile file("${SIGNING_CERTIFICATE}")
            storePassword "${SIGNGING_STOREPASSWORD}"
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        preview {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.compileOptions.encoding = "UTF-8"
    android.applicationVariants.all { variant ->
        def outFileName
        def flavorName = variant.flavorName //获取渠道名
        variant.outputs.all { output ->
            def flavorVerName = variant.mergedFlavor.versionName //获取渠道版本名
            if (variant.buildType.name == "release") {//正式
                outFileName = "${flavorName}_${flavorVerName}.${buildTime()}_prd.apk"
            } else if (variant.buildType.name == "preview") {//测试预览
                outFileName = "${flavorName}_${flavorVerName}.${buildTime()}_uat.apk"
            } else {//开发包
                outFileName = "${flavorName}_${flavorVerName}.${buildTime()}_dev.apk"
            }
            output.outputFileName = outFileName
        }
    }

    dexOptions {
        preDexLibraries = false
    }

}


//构建包时间
def buildTime() {
    return new Date().format("MMdd_HHmm", TimeZone.getTimeZone("GMT+8"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Dagger2
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    kapt rootProject.ext.dependencies["dagger2-android-processor"]

    //ARouter
    implementation rootProject.ext.dependencies["arouter-api"]
    kapt rootProject.ext.dependencies["arouter-compiler"]

    //TabBar
    implementation "devlight.io:navigationtabbar:1.2.5"

    //TextFieldBoxes
    implementation "com.github.HITGIF:TextFieldBoxes:1.4.5"

    //Drawer
    implementation "com.mikepenz:materialdrawer:7.0.0-rc03"

    //DropDownMenu
    implementation "com.github.dongjunkun:DropDownMenu:1.0.4"

    //lottie
    implementation "com.airbnb.android:lottie:2.8.0"

    //PhotoView
    implementation "com.github.chrisbanes:PhotoView:2.1.4"

    //Mikepenz
    implementation "com.mikepenz:iconics-core:4.0.1-b01"
    implementation "com.mikepenz:iconics-views:4.0.1-b01"
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.6-kotlin@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.9.0.0-kotlin@aar'
    implementation 'com.mikepenz:community-material-typeface:3.5.95.1-kotlin@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.6-kotlin@aar'
    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.5-kotlin@aar'
    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.5-kotlin@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.5-kotlin@aar'

    //iconics
    implementation "com.mikepenz:iconics-core:4.0.1-b01"
    implementation "com.mikepenz:iconics-views:4.0.1-b01"
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.6-kotlin@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.9.0.0-kotlin@aar'
    implementation 'com.mikepenz:community-material-typeface:3.5.95.1-kotlin@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.6-kotlin@aar'
    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.5-kotlin@aar'
    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.5-kotlin@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.5-kotlin@aar'

    implementation project(path: ':cams-mvvm')


    //test
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraintlayout"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["test-junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
}