apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'flavors.gradle'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        applicationId "com.linwei.github_mvvm"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /**添加多 dex分包支持*/
        multiDexEnabled true
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
        javacOptions {
            // 增加错误提示
            option("-Xmaxerrs", 500)
        }
    }

    signingConfigs {
        debug {
            keyAlias "${SIGNING_KEYALIAS}"
            keyPassword "${SIGNGING_CERTIFICATEPASSWORD}"
            storeFile file("${SIGNING_CERTIFICATE}")
            storePassword "${SIGNGING_STOREPASSWORD}"
        }
        release {
            keyAlias "${SIGNING_KEYALIAS}"
            keyPassword "${SIGNGING_CERTIFICATEPASSWORD}"
            storeFile file("${SIGNING_CERTIFICATE}")
            storePassword "${SIGNGING_STOREPASSWORD}"
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        preview {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    android.compileOptions.encoding = "UTF-8"
    android.applicationVariants.all { variant ->
        def outFileName
        def flavorName = variant.flavorName //获取渠道名
        variant.outputs.all { output ->
            def flavorVerName = variant.mergedFlavor.versionName //获取渠道版本名
            if (variant.buildType.name == "release") {//正式
                outFileName = "${flavorName}_${flavorVerName}.${buildTime()}_prd.apk"
            } else if (variant.buildType.name == "preview") {//测试预览
                outFileName = "${flavorName}_${flavorVerName}.${buildTime()}_uat.apk"
            } else {//开发包
                outFileName = "${flavorName}_${flavorVerName}.${buildTime()}_dev.apk"
            }
            output.outputFileName = outFileName
        }
    }

    dexOptions {
        preDexLibraries = false
    }

    //针对编辑错误
    configurations {
        cleanedAnnotations
        compile.exclude group: 'org.jetbrains', module: 'annotations'
    }

    packagingOptions {
        exclude 'META-INF/library-core_release.kotlin_module'
    }

}


//构建包时间
def buildTime() {
    return new Date().format("MMdd_HHmm", TimeZone.getTimeZone("GMT+8"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies["constraintlayout"]

    ///Dagger2
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    kapt rootProject.ext.dependencies["dagger2-android-processor"]

    ///Retrofit
    implementation rootProject.ext.dependencies["retrofit-converter-scalars"]
    implementation(rootProject.ext.dependencies["retrofit-converter-simplexml"]) {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    ///ARouter
    //implementation rootProject.ext.dependencies["arouter-api"]
    //implementation rootProject.ext.dependencies["arouter-register"]
    //kapt rootProject.ext.dependencies["arouter-compiler"]

    ///TabBar
    implementation 'devlight.io:navigationtabbar:1.2.5'

    ///TextFieldBoxes
    implementation 'com.github.HITGIF:TextFieldBoxes:1.4.5'

    ///DropDownMen
    implementation 'com.github.dongjunkun:DropDownMenu:1.0.4'

    ///lottie
    implementation 'com.airbnb.android:lottie:2.8.0'

    ///PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    ///Avi
    implementation 'com.wang.avi:library:2.1.3'

    ///BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    ///Drawer
    implementation 'com.mikepenz:materialdrawer:7.0.0-rc03'

    ///本地存储数据调试工具
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    ///markdown
    implementation "com.github.tiagohm.MarkdownView:library:0.19.0"
    implementation "io.noties.markwon:core:4.0.2"
    implementation "io.noties.markwon:html:4.0.2"
    implementation "io.noties.markwon:recycler:4.0.2"
    implementation "io.noties.markwon:recycler-table:4.0.2"
    implementation "io.noties.markwon:linkify:4.0.2"
    implementation "io.noties.markwon:image:4.0.2"
    implementation "io.noties.markwon:image-glide:4.0.2"
    implementation "io.noties.markwon:syntax-highlight:4.0.2"

    ///iconics
    implementation 'com.mikepenz:iconics-core:4.0.1-b01'
    implementation 'com.mikepenz:iconics-views:4.0.1-b01'
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.6-kotlin@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.9.0.0-kotlin@aar'
    implementation 'com.mikepenz:community-material-typeface:3.5.95.1-kotlin@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.6-kotlin@aar'
    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.5-kotlin@aar'
    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.5-kotlin@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.5-kotlin@aar'

    implementation project(path: ':cams-mvvm')

    ///test
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraintlayout"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["test-junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
}